import{d as a,m as n,l as p,_ as m,b as d,e as c,h as u}from"./index-D59UPlH_.js";import{W as h,P as l}from"./PlayerController-Dn-ElMeT.js";import{V as _,u as f}from"./CaptureManager-oOErcIY9.js";import"./ChannelsStore-DTEnbOnk.js";import"./ssrBoot-5VSid4r3.js";import"./VDialog-BVbID6Pr.js";import"./VChip-CTbcXmcN.js";import"./VTextField-CN5peWdG.js";import"./VAvatar--oJobR23.js";import"./VCard-CXgvKvRo.js";import"./VSlider-CKS88xfT.js";import"./swiper-wwp4IWv2.js";import"./CommentMuteSettings-CBvrfxL4.js";import"./VSelect-UNgHZOon.js";import"./vuedraggable.umd-DeDp8aQm.js";import"./Twitter-jXdvEL-7.js";import"./PlayerUtils-DvsnJsyj.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:h},computed:{...n(f,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await _.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new l("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=d("Watch",!0);return c(),u(s,{playback_mode:"Video"})}const D=m(y,[["render",$]]);export{D as default};
