import{d as a,m as n,l as p,_ as m,g as d,b as c,k as u}from"./index-C_K5Lxok.js";import{W as l,P as h}from"./PlayerController-Cg5CkX7N.js";import{V as _,u as f}from"./CaptureManager-ntGhLGBu.js";import"./ChannelsStore-D_mXePwd.js";import"./ssrBoot-5uzTF8uw.js";import"./VDialog-CAWMbxT-.js";import"./VChip-4dD_K6Xv.js";import"./VTextField-BzatNvwg.js";import"./VAvatar-gdfTCHEm.js";import"./VCard-Dx0WNLWC.js";import"./VSlider-DdFGMkc5.js";import"./swiper-DUK6UNxF.js";import"./CommentMuteSettings-CmX8o7t3.js";import"./VSelect-sZXAPJ1Z.js";import"./vuedraggable.umd-BB5bTGQa.js";import"./Twitter-CMa5JwR9.js";import"./PlayerUtils-DvsnJsyj.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:l},computed:{...n(f,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await _.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new h("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=u("Watch",!0);return c(),d(s,{playback_mode:"Video"})}const D=m(y,[["render",$]]);export{D as default};
