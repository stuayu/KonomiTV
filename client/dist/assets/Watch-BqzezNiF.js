import{d as a,m as n,l as p,_ as m,g as d,b as c,k as u}from"./index-OIxe0F57.js";import{W as l,P as h}from"./PlayerController-CqcI3VbK.js";import{V as _,u as f}from"./CaptureManager-CDsMZGeG.js";import"./ChannelsStore-BYI4PKpN.js";import"./ssrBoot-CWRQRu8F.js";import"./VDialog-B9yTXlJ5.js";import"./VChip-D9Tq23p0.js";import"./VTextField-C6H0qYR7.js";import"./VAvatar-D1mSqf4G.js";import"./VCard-DKOot0--.js";import"./VSlider-KEQwp4V9.js";import"./swiper-BkFx38Ex.js";import"./CommentMuteSettings-Z-l_u9hz.js";import"./VSelect-DICeEypV.js";import"./vuedraggable.umd-BCJaBUUB.js";import"./Twitter-ss5opKCA.js";import"./PlayerUtils-DvsnJsyj.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:l},computed:{...n(f,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await _.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new h("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=u("Watch",!0);return c(),d(s,{playback_mode:"Video"})}const D=m(y,[["render",$]]);export{D as default};
